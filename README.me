# Serviço Docling

Serviço para processamento de documentos utilizando a biblioteca Docling. Rodando em containers Docker, este serviço servirá para alimentar outros serviços no servidor.

## Sobre

Este serviço utiliza a biblioteca [Docling](https://github.com/docling-project/docling) para processar documentos em diversos formatos (PDF, DOCX, XLSX) e extrair informações estruturadas.

## Funcionalidades

- Processamento de documentos PDF, DOCX, XLSX
- Extração de texto, tabelas e imagens
- API REST para integração com outros serviços
- Interface web para upload e visualização de documentos
- Armazenamento local de documentos processados

## Requisitos

- Docker e Docker Compose
- Python 3.10+

## Instalação e Execução

O serviço Docling é executado exclusivamente via Docker para garantir isolamento e facilidade de implantação.

```bash
# Construir e iniciar os containers
./run.sh start

# Ou usando docker-compose diretamente
docker-compose up -d
```

### Implementação Atual

Atualmente, o serviço está implementado com funcionalidades básicas:

- Recebimento e armazenamento de documentos
- API REST para upload e consulta de documentos

A integração com a biblioteca Docling para processamento avançado de documentos será implementada em uma fase posterior.

O script `run.sh` fornece comandos adicionais para gerenciar o serviço:

```bash
./run.sh status        # Verificar status dos containers
./run.sh logs          # Ver logs em tempo real
./run.sh stop          # Parar os containers
./run.sh restart       # Reiniciar os containers
./run.sh build         # Reconstruir os containers
```

## API

A documentação da API estará disponível em:

- Swagger UI: http://localhost:8082/docs
- ReDoc: http://localhost:8082/redoc
- Interface Web: http://localhost:8082/web
- Quando implantado no servidor:
  - API Docs: https://ifva.duckdns.org/docling/docs
  - Interface Web: https://ifva.duckdns.org/docling/web

## Estrutura do Projeto

```
.
├── app/                # Código da aplicação
│   ├── api/            # Rotas da API
│   ├── core/           # Configurações e funcionalidades centrais
│   ├── services/       # Serviços de processamento
│   ├── static/         # Arquivos estáticos (CSS, JS)
│   ├── templates/      # Templates HTML
│   └── utils/          # Utilitários
├── nginx/              # Configuração do Nginx
├── uploads/            # Diretório para upload de arquivos
├── results/            # Diretório para resultados processados
├── Dockerfile          # Configuração do Docker
├── docker-compose.yml  # Configuração do Docker Compose
└── requirements.txt    # Dependências Python
```


O que sugiro antes de começar a implementação:

## Definir claramente os requisitos do serviço:

- **Quais tipos de documentos precisamos processar?**
  Principalmente PDF e eventualmente arquivos docx, xlsx e os equivalentes do google drive.

- **Quais funcionalidades específicas do Docling queremos utilizar?**
  Extração das informações, comparações entre dados e captura de informações específicas

- **Como o serviço será acessado (API REST, interface web, etc.)?**
  API REST mas eventualmente interface web num segundo momento da implementação

- **Como os documentos serão fornecidos e como os resultados serão entregues?**
  Será analisada as opções, se passando o arquivo inteiro, por link, ou apenas os dados.

## Entender a infraestrutura:

- Sistema rodará em um server ubuntu com nginx (mais informações em info.md) e acessível em ifva.duckdns.org
- **Como este serviço se integrará com os outros serviços existentes?**

- **Quais são os requisitos de armazenamento (onde os documentos serão armazenados)?**
    Será verificada a possibilidade de armazenar no google drive ou one drive, inicialmente no próprio servidor.
- **Quais são os requisitos de desempenho e escalabilidade?**
    O servidor não é poderoso, há planos para um upgrade no futuro. Um dos motivos do docker estar sendo usado. Inicialmente apenas dois serviços utilizarão o Docling, por isso a escalabilidade não é uma prioridade.

Com base no repositório https://github.com/docling-project/docling

Vamos começar com uma implementação mínima para testar a funcionalidade básica do Docling, ajuste das rotas e integração com o servidor.